upstream live {
	server loadb01.live.com.au:80;
}

server {
    listen       80;
    server_name  localhost;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

	include conf.d/kitome.r;

    location / {

		if ($http_host ~* "^live.com.au"){
			rewrite ^(.*)$ http://www.live.com.au$1 redirect;
		}

		proxy_pass  http://live;
		proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
		proxy_redirect off;
		proxy_buffering off;
		proxy_set_header        Host            loadb01.live.com.au;
		proxy_set_header        X-Real-IP       $remote_addr;
		proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
	}

    location /blog {
		# This is cool because no php is touched for static content.
		# include the "?$args" part so non-default permalinks doesn't break when using query string
		try_files $uri $uri/ /blog/index.php?$args;
		root   /srv/html;

		include        fastcgi_params;

		fastcgi_param SCRIPT_FILENAME /srv/html/$fastcgi_script_name;
		fastcgi_split_path_info ^(.+\.php)(/.+)$;
		fastcgi_index  index.php;
		#fastcgi_pass   127.0.0.1:9000;

		#index  index.html index.htm;
		index index.php;
    }

    location ~ \.php$ {
        #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
		root   /usr/share/nginx/html;
		include        fastcgi_params;

        fastcgi_intercept_errors on;
		fastcgi_param SCRIPT_FILENAME /srv/html/$fastcgi_script_name;
		fastcgi_index  index.php;
        fastcgi_pass 127.0.0.1:9000;
    }
}
